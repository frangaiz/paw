{
  
    
        "post0": {
            "title": "Fallos_habituales_en_pr1",
            "content": "La asociación de un label con su input (o select o textarea) se hace gracias al id del input. No se puede usar el atributo name. Hace falta un id en el input y usar ese id en el for del label. . Se indicaba un action para el form en el enunciado. Algunos de vosotros no lo habéis usado. . He visto soluciones imaginativas para el “subrayado” de la legenda de las secciones del formulario (fieldset). La forma más sencilla más sencilla de hacerlo en mi opinión es con un border-bottom en el elemento legend del fieldset (y darle width 100% a ese legend) . No deberíais usar &lt;hr&gt; para el subrayado de las secciones del formulario. &lt;hr&gt; implica una ruptura semántica en el contenido del HTML, y el caso en cuestión no puede ser más diferente. . Los controles de un formulario deben tener atributo name (si se quieren emplear como tales controles de introducción de datos). Si no lo tienen, serán solamente elementos estéticos y no servirán para nada. .",
            "url": "https://frangaiz.github.io/paw/2022/05/12/Fallos_habituales_en_pr1.html",
            "relUrl": "/2022/05/12/Fallos_habituales_en_pr1.html",
            "date": " • May 12, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Ayuda para la práctica 9",
            "content": "Fragmentos de código para la Práctica 8 . Nota: este fichero tiene formato markdown. Puedes usar algún plugin de navegador para ver el contenido del fichero de una forma más agradable (ej.: “Markdown Viewer Webext” para Firefox; o “Markdown Viewer” en G. Chrome). . Existencias artículo . Modificar la página fichaArticulo.jsp. Incluye entre el div del precio y del carro el siguiente nuevo div: . &lt;div class=&quot;stockArt&quot;&gt; &lt;img src=&quot;img/Almacen30x30.png&quot; title=&quot;Ver stock disponible&quot;&gt;&amp;nbsp; &lt;span id=&quot;stock&quot;&gt;&lt;!-- x unidades --&gt;&lt;/span&gt;&lt;br/&gt; &lt;/div&gt; . Detalle de pedido . Añadir una table como esta, en una fila debajo de la fila del pedido desplegado: . &lt;table width=&quot;95%&quot;&gt; &lt;colgroup&gt; &lt;col width=&quot;9%&quot;&gt;&lt;col width=&quot;53%&quot;&gt;&lt;col width=&quot;10%&quot;&gt; &lt;col width=&quot;10%&quot;&gt;&lt;col width=&quot;6%&quot;&gt;&lt;col width=&quot;6%&quot;&gt; &lt;/colgroup&gt; &lt;tr style=&quot;text-align: left&quot;&gt;&lt;td colspan=&quot;6&quot;&gt;Detalle del pedido P000004-08&lt;/td&gt;&lt;/tr&gt; &lt;tr style=&quot;text-align: left&quot;&gt; &lt;td&gt;Cantidad&lt;/td&gt;&lt;td&gt;Art&amp;iacute;culo&lt;/td&gt;&lt;td&gt;P.V.P.&lt;/td&gt; &lt;td&gt;Su precio&lt;/td&gt;&lt;td&gt;F. E. des.&lt;/td&gt;&lt;td&gt;F. E. prev.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align:center&quot;&gt;3&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;Ede-445CA / Campana CD5-60 N - Edesa&lt;/td&gt; &lt;td style=&quot;text-align: right&quot;&gt;205,2 &amp;euro;&lt;/td&gt; &lt;td style=&quot;text-align: right&quot;&gt;616 &amp;euro;&lt;/td&gt; &lt;td&gt;08/02/2012&lt;/td&gt; &lt;td&gt;09/02/2012&lt;/td&gt; &lt;/tr&gt; &lt;tr class=&quot;par&quot;&gt; &lt;td style=&quot;text-align:center&quot;&gt;13&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;Mie-043MO / Microondas Miele M 611-3S - Miele&lt;/td&gt; &lt;td style=&quot;text-align: right&quot;&gt;180 &amp;euro;&lt;/td&gt; &lt;td style=&quot;text-align: right&quot;&gt;2.340 &amp;euro;&lt;/td&gt; &lt;td&gt;06/02/2012&lt;/td&gt; &lt;td&gt;S/D*&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; . Función hazHTMLPedido para hacer la tabla anterior . var hazHTMLPedido = function (pedido) { var html = &#39;&lt;table width=&quot;95%&quot;&gt; &lt;colgroup&gt; &lt;col width=&quot;9%&quot;&gt;&lt;col width=&quot;53%&quot;&gt;&lt;col width=&quot;10%&quot;&gt; &lt;col width=&quot;10%&quot;&gt;&lt;col width=&quot;6%&quot;&gt;&lt;col width=&quot;6%&quot;&gt; &lt;/colgroup&gt; &lt;tr style=&quot;text-align: left&quot;&gt;&lt;td colspan=&quot;6&quot;&gt;Detalle del pedido &#39;; html += pedido.codigo; html += &#39;&lt;/td&gt;&lt;/tr&gt; &lt;tr style=&quot;text-align: left&quot;&gt; &lt;td&gt;Cantidad&lt;/td&gt;&lt;td&gt;Art&amp;iacute;culo&lt;/td&gt;&lt;td&gt;P.V.P.&lt;/td&gt; &lt;td&gt;Su precio&lt;/td&gt;&lt;td&gt;F. E. des.&lt;/td&gt;&lt;td&gt;F. E. prev.&lt;/td&gt; &lt;/tr&gt;&#39; html = pedido.lineas.reduce(function (html, l, i) { html += &#39; &lt;tr &#39;+(i%2==0?&#39;class=&quot;par&quot;&#39;:&#39;&#39;)+&#39;&gt; &lt;td style=&quot;text-align:center&quot;&gt;&#39;; html += l.cantidad; html += &#39;&lt;/td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&#39;; html += l.articulo.codigo +&#39; / &#39;+l.articulo.nombre html += &#39;&lt;/td&gt;&lt;td style=&quot;text-align: right&quot;&gt;&#39;+l.articulo.pvp+&#39; &amp;euro;&lt;/td&gt;&#39; html += &#39;&lt;td style=&quot;text-align: right&quot;&gt;&#39;+ l.precioReal +&#39; &amp;euro;&lt;/td&gt;&#39; html += &#39;&lt;td&gt;&#39; + l.fechaEntregaDeseada.dayOfMonth + &#39;/&#39; + l.fechaEntregaDeseada.month + &#39;/&#39; + l.fechaEntregaDeseada.year + &#39;&lt;/td&gt;&#39;; html += &#39;&lt;td&gt;&#39; + (!l.fechaEntregaPrevista ? &#39;S.D.*&#39; : l.fechaEntregaPrevista.dayOfMonth + &#39;/&#39; + l.fechaEntregaPrevista.month + &#39;/&#39; + l.fechaEntregaPrevista.year) + &#39;&lt;/td&gt;&lt;/tr&gt;&#39;; return html; }, html) html += &#39;&lt;/table&gt;&#39; return html; } .",
            "url": "https://frangaiz.github.io/paw/practicas/ayuda/practica9/2022/05/12/AyudaPr9.html",
            "relUrl": "/practicas/ayuda/practica9/2022/05/12/AyudaPr9.html",
            "date": " • May 12, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Ayuda para la práctica 8",
            "content": "Fragmentos de código para la Práctica 8 . Nota: este fichero tiene formato markdown. Puedes usar algún plugin de navegador para ver el contenido del fichero de una forma más agradable (ej.: “Markdown Viewer Webext” para Firefox; o “Markdown Viewer” en G. Chrome). . Ejercicio 3.1 . No hay ayuda para este ejercicio. Teclea tú todo el código. No te limites a copiarlo. Prográmalo. . Ejercicio 3.2 . Trozo de HTML con los iconos con forma de ojo . &lt;a href=&quot;#&quot; class=&quot;verContr&quot;&gt;&lt;span class=&quot;fas fa-eye&quot;&gt;&lt;/span&gt;&lt;/a&gt; . Ejercicio 3.3 . Trozo de HTML con los inputs de búsqueda avanzada . &lt;br&gt; &lt;input type=&quot;text&quot; name=&quot;nombre&quot; id=&quot;nombre&quot; value=&quot;&quot; placeHolder=&quot;Nombre&quot; style=&quot;margin-left: 10px&quot;/&gt; &lt;input type=&quot;text&quot; name=&quot;codigo&quot; id=&quot;codigo&quot; value=&quot;&quot; placeholder=&quot;Código&quot; /&gt; . HTML para añadir el botón con el icono de “tres puntos” . &lt;span&gt;&amp;nbsp; &lt;a title=&quot;Búsqueda avanzada&quot;&gt;&lt;span class=&quot;fas fa-ellipsis-v&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; . Ejercicio 3.4 . -webkit-box-shadow: 0px 20px 20px 0px rgba(0, 0, 0, 0.15); -moz-box-shadow: 0px 20px 20px 0px rgba(0, 0, 0, 0.15); box-shadow: 0px 20px 20px 0px rgba(0, 0, 0, 0.15); z-index: 10; position: relative; transform: translate(0,-5px); . Ejercicio 3.6 . Código para la mejora . input:required:invalid, select:required:invalid { border-left: 5px solid #a94442; /* red */ padding-left: 3px; color: #C02C11; } input:required:valid, select:required:valid { border-left: 5px solid #5C7E6F; /* green */ padding-left: 3px; } . Ejercicio 3.7 . Función para añadir un calendario a un campo de texto . function setCalendar(campo) { // Configuración del calendario let calCnf = { dateFormat: &quot;%d/%m/%Y&quot;, css: &quot;dhx_widget--bordered&quot;, value: campo.value, disabledDates: date =&gt; date &lt; new Date() } let calendar = new dhx.Calendar(null, calCnf); // Creación del calendario let popup = new dhx.Popup(); // Pop-up ... popup.attach(calendar); // ... asociado al calendario ... campo.addEventListener(&quot;click&quot;, function () { popup.show(campo); // …que se muestra al hacer clic en el campo }); calendar.events.on(&quot;change&quot;, function () { // Al seleccionar una fecha... campo.value = calendar.getValue(); // ... se cambia el valor del campo y ... popup.hide(); // ... se oculta el pop-up/calendario }); } . Ejercicio 3.8 . Ejemplo de mapa . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Ejemplo base de leaflet&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/leaflet@1.8.0/dist/leaflet.css&quot; /&gt; &lt;script src=&quot;https://unpkg.com/leaflet@1.8.0/dist/leaflet.js&quot;&gt;&lt;/script&gt; &lt;script&gt; var map; function inicializa() { var cnf = { center: [40.4169473, -3.7035285], zoom: 6 } map = L.map(&#39;mapId&#39;, cnf) L.tileLayer(&#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#39;, { attribution: &#39;Map data &amp;copy; &lt;a href=&quot;http://openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt; contributors, &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/2.0/&quot;&gt;CC-BY-SA&lt;/a&gt;, Imagery © &lt;a href=&quot;http://cloudmade.com&quot;&gt;CloudMade&lt;/a&gt;&#39; }).addTo(map); // Añade un marcador al mapa L.marker([42.4666700, -2.4238500]).bindPopup(&quot;Universidad de La Rioja - CCT&quot;).addTo(map); // Puedes añadir más marcadores de la misma manera } window.addEventListener(&quot;load&quot;, inicializa); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;mapId&quot; style=&quot;margin: auto; width: 512px; height: 512px; position: relative; overflow: hidden;&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . Ejemplo de código de geolocalización . &lt;script language=&quot;javascript&quot;&gt; function obtener_localizacion() { if (navigator.geolocation) { navigator.geolocation.getCurrentPosition(muestraPosicion); } else { alert(&#39;Su navegador no soporta la API de geolocalizacion&#39;); } } function muestraPosicion(posicion) { var latitud = posicion.coords.latitude; var longitud = posicion.coords.longitude; alert(&#39;Estas en &#39;+latitud+&#39;, &#39;+longitud) } &lt;/script&gt; ... &lt;button onclick=&quot;obtener_localizacion()&quot;&gt;Dime dónde estoy&lt;/button&gt; . Código para el icono “home” . var homeIcon = L.icon({ iconUrl : &#39;img/home.png&#39;, iconSize : [32, 37], // size of the icon iconAnchor : [16, 35], // point of the icon which will correspond to marker&#39;s location popupAnchor: [0, -37] // point from which the popup should open relative to the iconAnchor }); L.marker([…la latitud…, …la longitud…], { icon: homeIcon, title: &quot;Su situación&quot;} ) .bindPopup(&quot;Su situación&quot;) .addTo(map) .togglePopup(); . Ejercicio 3.10 . HTML de la fila del importe total . &lt;tr class=&quot;precTotal&quot;&gt;&lt;td id=&quot;precioTotal&quot; colspan=&quot;5&quot;&gt; TOTAL: &lt;/td&gt;&lt;/tr&gt; . Ejercicios de otros cursos (que no hay que hacer) . Ejercicio 5.1 . HTML correspondiente al icono de carro de la compra . &lt;div class=&quot;dcha&quot; style=&quot;width:75px&quot; id=&quot;carroDrop&quot;&gt; &lt;div style=&quot;position: absolute&quot;&gt; &lt;a href=&quot;clientes/Carrito&quot;&gt; &lt;img style=&quot;z-index: 0; position: absolute&quot; src=&quot;img/AddCart2-50.png&quot;&gt; &lt;/a&gt; &lt;div style=&quot;z-index: 10; position: absolute; top: 10px; left:8px; font-weight: bold; font-size: 15px&quot;&gt; N &lt;/div&gt; &lt;!-- Cambiarás un cosa aquí --&gt; &lt;/div&gt; &lt;/div&gt; . Manejador de dragstart . function (event) { var enlace = this.querySelector(&#39;.carro a&#39;).href; event.dataTransfer.setData(&#39;enlace&#39;, enlace); } . Manejador de dragover . function (evento) { evento.preventDefault(); } . Manejador de drop . function (evento) { var enlace = evento.dataTransfer.getData(&#39;enlace&#39;) window.location = enlace } . Ejercicio 5.6 . &lt;div id=&quot;qrdest&quot; class=&quot;isda&quot;&gt;&lt;/div&gt; ... &lt;script&gt; $(&#39;#qrdest&#39;).qrcode({ size: 85, text: window.location.href }); &lt;/script&gt; .",
            "url": "https://frangaiz.github.io/paw/practicas/ayuda/practica8/2022/05/12/AyudaPr8.html",
            "relUrl": "/practicas/ayuda/practica8/2022/05/12/AyudaPr8.html",
            "date": " • May 12, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Ayuda para la práctica 7",
            "content": "Fragmentos de código para la Práctica 7 . Nota: este fichero tiene formato markdown. Puedes usar algún plugin de navegador para ver el contenido del fichero de una forma más agradable (ej.: “Markdown Viewer Webext” para Firefox; o “Markdown Viewer” en G. Chrome). . Métodos para el ejercicio de añadir un artículo . Anotación @MultipartConfig . @MultipartConfig(fileSizeThreshold = 1024 * 1024 * 1, maxFileSize = 1024 * 1024 * 1, maxRequestSize = 1024 * 1024 * 1 + 10 * 1024) . Métodos auxiliares para el servlet . // Este método necesita que el servlet que lo use tenga definida una variable de clase // llamada CONT_FICH: private static long CONT_FICH = 0; private String getNombreFicheroFoto(Part part) { String fn = part.getSubmittedFileName(); if (fn == null) return null; // En los viejos navegadores IE y Edge el nombre del fichero incluye la ruta // Por si acaso, la quitamos fn = fn.replaceAll(&quot; &quot;, &quot;/&quot;); fn = fn.substring(fn.lastIndexOf(&quot;/&quot;) + 1); // Devolver el nombre return (System.currentTimeMillis()) + &quot;&quot; + (CONT_FICH++) + fn; } // El método podría mejorarse si se declara una variable global BASE_FOTOS ... pero no es fácil protected void guardaFoto(Part foto, Articulo art) throws IOException { String BASE_FOTOS = this.getServletContext().getRealPath(&quot;/img/fotosElectr&quot;)+File.separator; if (foto.getSize() &gt; 0) { foto.write(BASE_FOTOS + art.getFoto()); foto.delete(); } } /** * Realiza las validaciones para los campos del formulario de alta de * nuevo artículo * * @param art objeto paw.model.Articulo con los datos leídos del formulario * @param foto objeto Part con el fichero de la foto del artículo * @return Una lista de String con mensajes de error correspondientes a las * reglas de validación que no se cumplen */ private List&lt;String&gt; valida(Articulo art, Part foto) { List&lt;String&gt; errores = new ArrayList&lt;String&gt;(); if (UtilesString.isVacia(art.getNombre()) || UtilesString.isVacia(art.getTipo()) || UtilesString.isVacia(art.getFabricante())) { errores.add(&quot;Debes proporcionar valor para todos los campos requeridos&quot;); } if (art.getNombre() != null &amp;&amp; art.getNombre().length() &gt; 50) { errores.add(&quot;La longitud máxima del nombre son 50 caracteres&quot;); } if (art.getTipo() != null &amp;&amp; art.getTipo().length() &gt; 15) { errores.add(&quot;La longitud máxima del tipo son 15 caracteres&quot;); } if (art.getFabricante() != null &amp;&amp; art.getFabricante().length() &gt; 11) { errores.add(&quot;La longitud máxima del fabricante son 15 caracteres&quot;); } if (art.getDescripcion() != null &amp;&amp; art.getDescripcion().length() &gt; 200) { errores.add(&quot;La longitud máxima de la descripción son 200 caracteres&quot;); } if (art.getFoto() != null &amp;&amp; art.getFoto().length() &gt; 50) { errores.add(&quot;El nombre de la foto es demasiado largo&quot;); } if (foto.getSize() &gt; 0 &amp;&amp; !foto.getContentType().startsWith(&quot;image&quot;)) { errores.add(&quot;El fichero subido debe ser una imagen.&quot;); } if (art.getPvp() &lt;= 0) { errores.add(&quot;El precio debe ser una cantidad positiva&quot;); } return errores; } .",
            "url": "https://frangaiz.github.io/paw/practicas/ayuda/practica7/2022/05/12/AyudaPr7-21-22b.html",
            "relUrl": "/practicas/ayuda/practica7/2022/05/12/AyudaPr7-21-22b.html",
            "date": " • May 12, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Aspectos A Mejorar En El Código De La Práctica",
            "content": "Codificación de la capa de persistencia . Implementación muy ineficiente del método getPaginadorArticulos() . Algunos de vosotros habéis implementado el método getPaginadorArticulos llamando al método getArticulos() de la clase paw.bd.GestorBD que yo os proporcionaba, para recuperar la lista de todos los artículos y luego usar el tamaño de esa lista para construir el paginador. . public static Paginador getPaginadorArticulos(int tamanioPagina) throws ExcepcionDeAplicacion { . paw.bd.GestorBD s = new paw.bd.GestorBD(); . int registros = s.getArticulos().size(); . return new Paginador(registros, tamanioPagina); . } . Es una solución muy ineficiente porque, lo que se podría hacer con una consulta muy simple (“select count(*) from articulo”), lo estáis resolviendo con una consulta que recupera los datos de todos los artículos de la BD (447) y construye un montón de objetos (447). La solución es cómoda para el programador, pero muy ineficiente para la aplicación (“lo que hará que vuestro jefe se vuelva a disgustar mucho”). . Otra implementación ineficiente del método getPaginadorArticulos() . Esta es un poco menos ineficiente que la anterior, pero también es criticable. Algunos de vosotros habéis implementado el método getPaginadorArticulos haciendo una consulta “select codigo from articulo” y contando luego el número de códigos obtenidos. . int numArticulos = 0; . Statement stmt = con.createStatement(); . ResultSet rs = stmt.executeQuery(“SELECT CODIGO FROM ARTICULO”); . while (rs.next()) { . numArticulos++; . } . Es una solución ineficiente porque el conteo de los artículos lo hace de forma mucho más eficiente el SGBD, usando count(*): “select count(*) from articulo”. El SGBD cuenta mucho más rápido que Java. Esta optimizado para ello. . int numArticulos = 0; . Statement stmt = con.createStatement(); . ResultSet rs = stmt.executeQuery(“SELECT count(*) FROM ARTICULO”); . if (rs.next()) { . numArticulos = rs.getInt(1); . } . Programación en general . Conversión de cadenas a números . No se puede presuponer nada en informática. Por ejemplo, no se puede presuponer que el parámetro de configuración del tamaño de la página en catalogo.jsp vaya a estar bien escrito (con “forma” de número), ni que en la petición a catalogo.jsp vayamos a recibir un parámetro de página que sea un número. . Por ello, las conversiones de texto a número que se hacen en la página catalogo.jsp deben estar dentro de un bloque try-catch, procurando que, si ocurriese algún error, las variables numéricas tomasen algún valor seguro: . int tamanioPagina = 15; . try { . tamanioPagina = Integer.parseInt(this.getInitParameter(“tamnioPagina”)); . } catch (Exception e) { . } . … . int pagina = 1; . try { . pagina = Integer.parseInt(request.getParameter(“pag”)); . } catch (NumberFormatException ex) { . } . Uso de métodos static: no hay que construir objetos . Os pedía que hicieseis una clase (sol.GestorBD) con dos métodos static . public static List&lt;Articulo&gt; getArticulos(int pagina, int tamanioPagina) throws ExcepcionDeAplicacion . public static Paginador getPaginadorArticulos(int tamanioPagina) throws ExcepcionDeAplicacion . Para usar esos métodos no hay que crear ningún objeto de la clase. . sol.GestorBD gbd2 = new sol.GestorBD(); NO . gbd2.getPaginadorArticulos(… . Se usan directamente sobre el nombre de la clase, como cualquier otra cosa que sea static. . sol.GestorBD.getPaginadorArticulos(… SI . No repetir código innecesariamente . Mirad este trozo de código: . &lt;% . GestorBD gbd = new GestorBD(); . if (request.getParameter(“cart”) == null |   | request.getParameter(“cart”).equals(“”)) { | . response.sendRedirect(“index.html”); . } else { . if (gbd.getArticulo(request.getParameter(“cart”)) == null) { . response.sendRedirect(“error.jsp?msg=” + URLEncoder.encode(“El artículo no existe”, “UTF-8”)); . } else { . Articulo a = gbd.getArticulo(request.getParameter(“cart”)); . %&gt; . O este otro . &lt;% . Paginador paginador = GestorBD2.getPaginadorArticulos(Integer.parseInt(config.getInitParameter(“tamanioPagina”))); . if (request.getParameter(“p”) == null |   | request.getParameter(“p”).trim().length() == 0 |   | Integer.parseInt(request.getParameter(“p”)) &lt; 1) { | . response.sendRedirect(“catalogo.jsp?p=1”); . return; . } . if (Integer.parseInt(request.getParameter(“p”)) &gt; paginador.getNumPaginas()) { . response.sendRedirect(“catalogo.jsp?p=” + paginador.getNumPaginas()); . return; . } . int pag = Integer.parseInt(request.getParameter(“p”)); . List&lt;Articulo&gt; articulos = GestorBD.getArticulos(pag, Integer.parseInt(config.getInitParameter(“tamanioPagina”))); . … . %&gt; . Además de otros “fallos” que ya he comentado en otros apartados, he subrayado las veces que se repiten las instrucciones Integer.parseInt, config.getInitParameter y request.getParameter. Estas repeticiones acarrean estos problemas: . Ineficiencia. Aunque sea poco el tiempo de ejecución asociado a la lectura de un parámetro de la queyString, o a la conversión de una cadena en entero, no nos podemos permitir el lujo de repetir tantas veces la ejecución de estos métodos. Es tiempo perdido innecesariamente. Especialmente grave es la repetición de gbd.getArticulo, ya que implica repetir una consulta a la BD. . | El código es más difícil de leer . | El código es más difícil de escribir . | . Ejecutad una única vez esas operaciones, usad variables para almacenar el resultado y utilizad esas variables en el programa. Más claro, y más eficiente, es algo así: . &lt;% . int tamPag = Integer.parseInt(config.getInitParameter(“tamanioPagina”)); . Paginador paginador = GestorBD2.getPaginadorArticulos(tamPag); . String ps = request.getParameter(“p”); . int pag = 1; . if (ps == null |   | ps.trim().length() == 0) { | . response.sendRedirect(“catalogo.jsp?p=1”); . return; . } else { . try { . pag = Integer.parseInt(ps); . } catch (NumberFormaException ex) {} . } . if (pag &lt; 1) { . response.sendRedirect(“catalogo.jsp?p=1”); . return; . } . if (pag &gt; paginador.getNumPaginas()) { . response.sendRedirect(“catalogo.jsp?p=” + paginador.getNumPaginas()); . return; . } . List&lt;Articulo&gt; articulos = GestorBD.getArticulos(pag, tamPag); . … . %&gt; . JSP / HTML . Contenidos de los ficheros auxiliares de cabecera y el pie . Estos ficheros deben contener solamente lo siguiente: . Cabecera . &lt;div class=“logo”&gt;&lt;a href=“index.html”&gt;&lt;img src=“img/LogoElectrosa200.png” border=“0”&gt;&lt;/a&gt;&lt;/div&gt; . &lt;div class=“sombra”&gt; .   … . &lt;/div&gt; . &lt;div class=“barra_menus”&gt; .   … . &lt;/div&gt; . Pie: . &lt;div class=“pie”&gt; .   … . &lt;/div&gt; . MUY IMPORTANTE: . No deben contener ni &lt;!DOCTYPE html&gt;, &lt;html&gt; ni &lt;head&gt; ni &lt;body&gt;. . Pensad qué pasaría si contuviesen esas etiquetas (o alguna o algunas de ellas). Es decir, si la cabecera fuese, por ejemplo: . &lt;!DOCTYPE html&gt; . &lt;html&gt; . &lt;body&gt; . &lt;div class=“logo”&gt;&lt;a href=“index.html”&gt;&lt;img src=“img/LogoElectrosa200.png” border=“0”&gt;&lt;/a&gt;&lt;/div&gt; . &lt;div class=“sombra”&gt; . … . &lt;/div&gt; . &lt;div class=“barra_menus”&gt; . … . &lt;/div&gt; . &lt;/body&gt; . &lt;/html&gt; . Al incluir este fichero en un JSP, por ejemplo como este: . &lt;%@page contentType=”text/html” pageEncoding=”UTF-8”%&gt; . &lt;!DOCTYPE html&gt; . &lt;html&gt; . &lt;head&gt; . &lt;meta http-equiv=“Content-Type” content=“text/html; charset=UTF-8”&gt; . &lt;title&gt;JSP Page&lt;/title&gt; . &lt;/head&gt; . &lt;body&gt; . &lt;%@ include file=’cabecera.html’%&gt; . &lt;div class=“sombra”&gt; . &lt;div class=“nucleo”&gt;… &lt;/div&gt; . … . &lt;/body&gt; . &lt;/html&gt; . El resultado del procesamiento sería: . &lt;!DOCTYPE html&gt; . &lt;html&gt; . &lt;head&gt; . &lt;meta http-equiv=“Content-Type” content=“text/html; charset=UTF-8”&gt; . &lt;title&gt;JSP Page&lt;/title&gt; . &lt;/head&gt; . &lt;body&gt; . &lt;!DOCTYPE html&gt; . &lt;html&gt; . &lt;body&gt; . &lt;div class=“logo”&gt;&lt;a href=“index.html”&gt;&lt;img src=“img/LogoElectrosa200.png” border=“0”&gt;&lt;/a&gt;&lt;/div&gt; . &lt;div class=“sombra”&gt; . … . &lt;/div&gt; . &lt;div class=“barra_menus”&gt; . … . &lt;/div&gt; . &lt;/body&gt; . &lt;/html&gt; . &lt;div class=“sombra”&gt; . &lt;div class=“nucleo”&gt;… &lt;/div&gt; . … . &lt;/body&gt; . &lt;/html&gt; . Fijaos en que, en medio del cuerpo de la página resultante aparece un &lt;!DOCTYPE html&gt; y un &lt;html&gt; y un &lt;body&gt;, lo cual es obviamente erróneo. . Usar cabecera y pie en todas las páginas JSP . Bastantes de vosotros habéis usado las directivas de inclusión de cabecera y pie sólo en la página de catalogo.jsp. Hay que usarlas en todas las páginas JSP de la aplicación. . Usar &lt;jsp:useBean de forma consistente . Aunque no lo habéis hecho todos, está bien que hayáis usado jsp:useBean para crear un objeto GestorBD en el scope application para evitar crear objetos en scriptlets. Es decir: . EVITAR: . &lt;% . GestorBD gbd = new GestorBD(); . %&gt; . USAR: . &lt;jsp:useBean id=”gbd” class=”paw.bd.GestorBD” scope=”application”&gt;&lt;/jsp:useBean&gt; . Pero sirve de poco hacerlo sólo en una única página. Lo que tenéis que hacer es usar jsp:useBean siempre. Así estaréis optimizando memoria porque creáis un único objeto GestorBD para toda la aplicación. Como los objetos de esta clase no tienen estado, no hay peligro en hacerlo. Para que la optimización sea máxima, el scope usado en jsp:useBean debe ser application. . Redirección ante errores de paginación . Algunos de vosotros habéis programado a medias la validación de las peticiones de cambio de página en catalogo.jsp. Habéis comprobado que el parámetro de la página pueda convertirse a un entero, y que éste esté entre 1 y el número total de páginas, y habéis corregido el valor en caso contrario, mostrando la información correspondiente a la página corregida. Pero eso no es suficiente ya que, ante una petición de página “-10” mostrarías información correcta de la página 1, pero la barra de direcciones indicaría que la página es la -10. . Lo que hay que enviar una respuesta de redirección al navegador para que vuelva a hacer la petición con el número de página corregido. Esta es la única manera de hacer que la dirección mostrada en la barra de direcciones del navegador corresponda con la información visualizada en la página. . Comprobar el mensaje en la página de error . Casi nadie ha comprobado que el valor del parámetro con el mensaje de error no sea vacío, asignándole un mensaje por defecto si eso ocurre. Esto sería lo correcto: . &lt;% . String msg = request.getParameter(“msg”); . if (UtilesString.isVacia(msg)) . msg = “Error de aplicación”; . %&gt; . &lt;div class=“error”&gt;&lt;%= msg%&gt;&lt;/div&gt; .",
            "url": "https://frangaiz.github.io/paw/2022/05/12/Aspectos-a-mejorar-en-el-c%C3%B3digo-de-la-pr%C3%A1ctica.html",
            "relUrl": "/2022/05/12/Aspectos-a-mejorar-en-el-c%C3%B3digo-de-la-pr%C3%A1ctica.html",
            "date": " • May 12, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://frangaiz.github.io/paw/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://frangaiz.github.io/paw/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://frangaiz.github.io/paw/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}